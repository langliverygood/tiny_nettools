#ifndef _RING_BUFFER_H_
#define _RING_BUFFER_H_

/* ring_buffer 管理结构 */
typedef struct _ring_buffer_s{
	int element_num;
	int element_size;
	int write_p;
	int read_p;
}ring_buffer_s;

typedef ring_buffer_s* ring_buffer_p;

/***************************************************************/
/* 函  数：rb_create ********************************************/
/* 说  明：初始化ring_buffer，申请空间 *****************************/
/* 参  数：element_num 元素的个数 *********************************/
/* 参  数：element_size 每个元素的大小 *****************************/
/* 参  数：ring_buffer 结构体的二级指针 ****************************/
/* 返回值：无 ****************************************************/
/***************************************************************/
void rb_create(int element_num, int element_size, ring_buffer_p *rb_p);

/***************************************************************/
/* 函  数：rb_can_write *****************************************/
/* 说  明：判断当前ring_buffer是否可写 ****************************/
/* 参  数：ring_buffer 结构体指针 ********************************/
/* 返回值：1 可写 ***********************************************/
/*      ：0 不可写 *********************************************/
/**************************************************************/
char rb_can_write(ring_buffer_p rb_p);

/***************************************************************/
/* 函  数：rb_write_in ******************************************/
/* 说  明：移动写指针 ********************************************/
/* 参  数：ring_buffer 结构体指针 ********************************/
/* 返回值：无 ***************************************************/
/**************************************************************/
void rb_write_in(ring_buffer_p rb_p);

/***************************************************************/
/* 函  数：rb_can_read ******************************************/
/* 说  明：判断当前ring_buffer是否可读 ****************************/
/* 参  数：ring_buffer 结构体指针 ********************************/
/* 返回值：1 可读 ***********************************************/
/*      ：0 不可读 *********************************************/
/**************************************************************/
char rb_can_read(ring_buffer_p rb_p);

/***************************************************************/
/* 函  数：rb_read_out ******************************************/
/* 说  明：移动读指针 ********************************************/
/* 参  数：ring_buffer 结构体指针 ********************************/
/* 返回值：无 ***************************************************/
/**************************************************************/
void rb_read_out(ring_buffer_p rb_p);

/***************************************************************/
/* 函  数：get_write_address ************************************/
/* 说  明：获得待写入的空间地址 ************************************/
/* 参  数：ring_buffer 结构体指针 ********************************/
/* 返回值：待写入的空间地址 ***************************************/
/**************************************************************/
char *get_write_address(ring_buffer_p rb_p);

/***************************************************************/
/* 函  数：get_read_address *************************************/
/* 说  明：获得待读出的空间地址 ************************************/
/* 参  数：ring_buffer 结构体指针 ********************************/
/* 返回值：待读出的空间地址 ***************************************/
/**************************************************************/
char *get_read_address(ring_buffer_p rb_p);

/***************************************************************/
/* 函  数：rb_delete ********************************************/
/* 说  明：销毁ring_buffer，释放空间 ******************************/
/* 参  数：ring_buffer 结构体的二级指针 ***************************/
/* 返回值：无  **************************************************/
/**************************************************************/
void rb_delete(ring_buffer_p *rb_p);

#endif
